name: Grab Tesst7 M3U8

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  grab_tesst7:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: 📦 Install Python dependencies
        run: pip install requests

      - name: 🔐 Download daylidata.txt
        run: |
          git clone --depth=1 https://x-access-token:${{ secrets.TOKEN_PRIVATE }}@github.com/${{ secrets.REPO_PRIVATE }} temp_private
          cp temp_private/daylidata.txt $HOME/daylidata.txt
          rm -rf temp_private

      - name: ▶️ Jalankan Python
        run: python getdaily.py

      - name: ✅ Commit & Push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure Git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git

          # Update timestamp file
          echo "Run at: $(date '+%Y-%m-%d %H:%M:%S')" > .last_tesst7

          # Pull latest changes with rebase to avoid conflicts
          git pull --rebase origin master

          # Add only the files we want to track
          git add TESSTSS7.txt .last_tesst7

          # Check for changes
          if ! git diff-index --quiet HEAD --; then
            # Determine which files changed
            CHANGED_FILES=$(git diff --name-only --cached)
            echo "Changed files: $CHANGED_FILES"
            
            if echo "$CHANGED_FILES" | grep -q 'TESSTSS7.txt'; then
              git commit -m "Update TESSTSS7.txt - $(date '+%Y-%m-%d %H:%M:%S')"
            else
              git commit -m "Update last test timestamp - $(date '+%Y-%m-%d %H:%M:%S')"
            fi
            
            # Force push if necessary (only for this linear history workflow)
            git push origin master
            echo "✅ Update pushed successfully"
          else
            echo "✅ No changes to commit"
          fi
